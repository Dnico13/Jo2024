/* affichage de la page suivant si l'utilisateur est authentifi√© ou non */
const authentification = JSON.parse(sessionStorage.getItem("identification"));


/*Test local*/
//const authentification = true;
//sessionStorage.setItem("id", JSON.stringify(1)); // Stocke l'ID en tant que string JSON
//const userId = JSON.parse(sessionStorage.getItem("id")); // R√©cup√®re et convertit en entier
//console.log(userId); // V√©rifie si l'ID est bien r√©cup√©r√©
/* fin test local*/


if (!authentification) {
        document.getElementById("formPaiement").classList.add("d-none");
        
    } else {
        
        document.getElementById("formAuthent").classList.add("d-none");
    }


/* ----------R√©cuperation du code js de login.js pour l'authentification et de la creation d'un compte modifie au niveau du href---------- */


// traitement du formulaire d'authentification

const API_URL = `${window.location.origin}/backend/api/LoginApi.php`;
console.log(API_URL);


 /* autentification avec envoi de mail */
document.getElementById("formConnexion").addEventListener("submit", function(event) {
    event.preventDefault();

    let formData = new FormData(this);

    fetch(API_URL, {
        method: "POST",
        body: formData
    })
    .then(response => response.json()) 
    .then(data => {  
        
        
        if (data.success) {  
            
            sessionStorage.setItem("id", data.id);
            sessionStorage.setItem("roles", data.roles);
            
            

            let verificationCode = prompt("üì© Un code de v√©rification a √©t√© envoy√© √† votre email.\nVeuillez entrer le code :"); 
            
            if (verificationCode) {  
                validateVerificationCode(verificationCode);  
            } else {  
                alert("‚ö†Ô∏è Vous devez entrer un code pour continuer.");
            }
        } else {  
            alert("‚ùå √âchec de l'authentification : " + data.message);
        }
    })  
    .catch(error => console.error("Erreur JavaScript :", error));  
});

/* Validation du code de v√©rification */
function validateVerificationCode(code) {
    let formData = new FormData();
    formData.append("verif_code", code);
    formData.append("email", document.getElementById("floatingInput").value);

    //  R√©cup√©ration des donn√©es stock√©es en session
    let userId = sessionStorage.getItem("id");
    let userRoles = sessionStorage.getItem("roles");

   

    formData.append("id", userId);
    formData.append("roles", userRoles);

    fetch("/backend/api/VerifyCode.php", {
        method: "POST",
        body: formData
    })
    .then(response => response.json())
    .then(data => {
        

        if (data.success) {  
            sessionStorage.setItem("identification", true);
            alert("‚úÖ Connexion valid√©e !");

                window.location.href = "/paiement"; 
            
        } else {  
            alert("‚ùå Code invalide ou expir√©. R√©essayez !");
            
            //  S√©curit√© : Suppression de  ID et r√¥le si la validation √©choue
            sessionStorage.removeItem("id");
            sessionStorage.removeItem("roles");
        }
    })
    .catch(error => console.error("Erreur :", error));
}

/* Partie inscription d'un nouvel utilisateur */

document
  .getElementById("formInscription")
  .addEventListener("submit", function (event) {
    event.preventDefault(); // Emp√™che l'envoi classique du formulaire

    // G√©n√©rer une cl√© al√©atoire √† 6 chiffres
    let clefAleatoire = Math.floor(100000 + Math.random() * 900000);

    // Mise √† jour du champ cach√© dans le formulaire
    document.getElementById("clef1").value = clefAleatoire;

    // R√©cup√©ration des donn√©es du formulaire
    let formData = {
      prenom2: document.getElementById("prenom2").value.trim(),
      nom2: document.getElementById("nom2").value.trim(),
      email2: document.getElementById("email2").value.trim(),
      password2: document.getElementById("password2").value.trim(),
      clef1: document.getElementById("clef1").value, // R√©cup√©ration de la cl√© depuis l'input cach√©
      roles: document.getElementById("roles").value,
    };

    // Envoi des donn√©es au serveur
    fetch("/backend/api/Inscription.php", {
      method: "POST",
      headers: {
        "Content-Type": "application/json",
      },
      body: JSON.stringify(formData),
    })
      .then((response) => response.json())
      .then((data) => {
        if (data.success) {
          alert("Inscription r√©ussie, vous pouvez desormais vous identifier.");
        } else {
          alert("Erreur : " + data.message);
        }
      })
      .catch((error) => {
        alert("Une erreur est survenue, veuillez r√©essayer.");
      });
  });

/*-------------------- fin de la recuperation du code Js de login.js -----------------------*/

/*-------------------alerte sur paiement refus√©---------------------------------------------*/
document.getElementById("refusPaiement").addEventListener("click", function() {
    alert("Oups ! Il semblerait que le paiement n'ait pas abouti. Pas de panique, cela peut arriver pour plusieurs raisons. V√©rifiez vos informations bancaires et r√©essayez, ou essayez un autre moyen de paiement. Besoin d'aide ? Nous sommes l√† pour vous !");
     window.location.href = "/paiement"; 

  });



/*-------------------alerte sur paiement accept√©---------------------------------------------*/

   // alert("Tout est parfait ! üéâ Votre paiement a bien √©t√© valid√©. Merci pour ta confiance ! Ton commande est en route, et nous avons h√¢te de te faire plaisir. √Ä tr√®s bient√¥t !");
/*--------------code pour envoyer en bdd------------------*/   



document.getElementById("acceptPaiement").addEventListener("click", function(event) {
  event.preventDefault(); // Emp√™che la redirection
  
  
  const API_URL_cde = `${window.location.origin}/backend/api/commande.php`;
  
  
   // R√©cup√©rer l'ID et le panier depuis sessionStorage
    let id = parseInt(sessionStorage.getItem("id"), 10);
    let panier = sessionStorage.getItem("panier"); 

/* **************** code pour test en local ****************** */
    //let id = 1;

    //let id = 9;
    //let panierb=[{"id":"3","formule":"Formule Duo","prix":70,"quantite":1}]
/******************  fin du code pour test en local ********** */
  
    try {
        
        let parsedPanier = JSON.parse(panier);
        
        if (typeof parsedPanier === 'object' && parsedPanier !== null) {
            panier = JSON.stringify(parsedPanier);
        } else {
        }
    } catch (e) {
        console.error("Erreur de parsing du panier depuis sessionStorage. V√©rifiez son format initial.", e);
        alert("Erreur de format du panier. Veuillez r√©essayer.");
        return; 
    }
    

let formData = new FormData();
formData.append("id", id);
formData.append("panier", panier);


fetch(API_URL_cde, {
    method: "POST",
    body: formData
})
.then(response => {
        if (!response.ok) {
            return response.json().then(errorData => {
                throw new Error(errorData.message || 'Erreur inconnue du serveur.');
            }).catch(() => {
                return response.text().then(text => { throw new Error(text || 'Erreur r√©seau ou du serveur sans message sp√©cifique.'); });
            });
        }
        return response.json();
    })
    .then(data => {
        
        if (data.status === "success") {
            
            alert("Paiement r√©ussi ! Vous pouvez r√©cup√©rer vos billets et les imprimer.");
            
            // Suppression des valeurs de session
            sessionStorage.removeItem("panier");
            sessionStorage.removeItem("id");
            sessionStorage.removeItem("roles");
            sessionStorage.removeItem("identification"); 


            if (data.cle_finale && data.cle_finale.length > 0) {
                 window.location.href = "/backend/billet.php?cle_finale=" + encodeURIComponent(data.cle_finale[0]);
            } else {
                 window.location.href = "/backend/billet.php"; // Rediriger sans cl√© si aucune n'est disponible
            }


            
        } else {
            alert("‚ùå √âchec de la commande : " + data.message);
        }
    })
    .catch(error => {
        console.error("Erreur lors de l'envoi ou du traitement de la commande :", error.message);
        alert("Probl√®me technique lors de la commande : " + error.message);
    });
});



/****************************fin du code envoi en bdd*************** */
